/*****************************************************************************

		Copyright (c) My Company

 Project:  WORK_LISTS
 FileName: WORK_LISTS.PRO
 Purpose: No description
 Written by: Visual Prolog
 Comments:
******************************************************************************/

include "work_lists.inc"

domains
	%Объявление домена-списка чисел.
	t_list = INTEGER* 

predicates

  %Отношение для удаления из списка первого вхождения заданного элемента.
  nondeterm removef(INTEGER, t_list, t_list)
  %Отношение для нахождения разности двух множеств.
  nondeterm diff(t_list, t_list, t_list)
  
  %Отношения (вспомогательные).
  nondeterm member(t_list, INTEGER)
 
clauses
  %Проверка принадлежности элемента списку.
  member([X|_], X).
  member([_|T], X):-
  	member(T, X).
  
  %Базовый случай остановки рекурсивного вызова правила.
  %Мы нашли первое вхождение элемента, тогда нужно все оставшиеся элементы добавить в хвост возвращаемого списка.
  removef(Element, [Element|T], T):-!.
  %Базовый случай остановки рекурсивного вызова правила.
  %В списке отсутствует удаляемый элемент, тогда нужно рекурсивно добавить все элементы для возвращаемого списка.
  removef(_, [], []):-!.
  %Правило, выполняющееся в случае, когда удаляемый элемент не равен голове рассматриваемого списка.
  removef(Element, [H|T], [H|Result]):-
  	removef(Element, T, Result).
  
  %Базовый случай остановки рекурсивного вызова правила.
  diff([], _, []):-!.
  %Мы нашли элемент, который есть во втором множестве.
  diff([HA|TA], B, Result):-
  	member(B, HA), !,
  	removef(HA, B, NewB),
  	diff(TA, NewB, Result).
  %Рассматриваемый элемент множества отсутствует во втором множестве.
  diff([HA|TA], B, [HA|Result]):-
  	diff(TA, B, Result).

goal
  %Удаление из списка первого вхождения заданного элемента.
  write("Требуется удалить из списка [8,3,3,1,2,3,3,3,4,5,6] элемент 3. Преобразованный список:"),
  nl,
  removef(3, [8,3,3,1,2,3,3,3,4,5,6], Result),
  write(Result), 
  nl, nl,
  fail;
  
  write("Требуется удалить из списка [3,6,2,6,3,3,14,5,19] элемент 1. Преобразованный список:"), 
  nl,
  removef(1, [3,6,2,6,3,3,14,5,19], Result),
  write(Result),
  nl, nl,
  fail;
  
  %Разность двух множеств в один список.
  write("Требуется найти разность двух множеств: [1,3,4,5,2,1,0,2] и [10,1,5,2,8,2,2]. Полученный результат:"),
  nl,
  diff([1,3,4,5,2,1,0,2], [10,1,5,2,8,2,2], Result),
  write(Result),
  nl, nl,
  fail;
  
  write("Требуется найти разность двух множеств: [1,2,3,4,5,6,7,10] и [2,4,7]. Полученный результат:"),
  nl,
  diff([1,2,3,4,5,6,7,10], [2,4,7], Result),
  write(Result),
  nl, nl,
  fail.
  
